name: Release

on:
  create:

  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: Specific tag (e.g. `gnu-tar@1.31`)
      latest:
        type: boolean
        required: false
        description: whether tagging latest to the image or not

env:
  REGISTRY: "ghcr.io"
  OWNER: "${{ github.repository_owner }}"


jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'create' && github.event.ref_type == 'tag'
    steps:
      - uses: actions/checkout@v3

      - name: Read tag
        id: tag
        # language=Bash
        run: |
          tag='${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.ref }}'
          echo "image=${tag%%@*}" >> $GITHUB_OUTPUT
          echo "version=${tag##*@}" >> $GITHUB_OUTPUT
          if [ '${{ github.event_name }}' == 'workflow_dispatch' ]; then
            echo 'use_latest=${{ inputs.latest }}' >> $GITHUB_OUTPUT
          else
            echo 'use_latest=true' >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          flavor: latest=${{ steps.tag.use_latest }}
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ steps.tag.outputs.image }}
          tags: |
            type=raw,value=${{ steps.tag.outputs.version }}
          labels: |
            org.opencontainers.image.title=${{ steps.tag.outputs.image }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Load buildkit state
        uses: isac322/buildkit-state@v1
        with:
          buildx-name: ${{ steps.buildx.outputs.name }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with: &build_opt
          context: '{{defaultContext}}:${{ steps.tag.outputs.image }}'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.tag.outputs.version }}

      - name: Export binaries to local
        uses: docker/build-push-action@v4
        with:
          <<: *build_opt
          push: false
          outputs: type=local,dest=.
          target: output

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: '${{ steps.tag.outputs.image }}@${{ steps.tag.outputs.version }}'
          files: |
            bin/*
          generate_release_notes: true
