name: CI

on:
  push:
    branches-ignore:
      - master
  workflow_dispatch:

jobs:
  collect-images:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.collect.outputs.directories }}
    steps:
      - uses: actions/checkout@v3
      - id: collect
        # language=Bash
        run: |
          directories="$(find . -type d -exec test -e '{}'/.metadata.json -a -e '{}'/Dockerfile \; -execdir basename '{}' \; \
            | jq -R '[.]' \
            | jq -scrM 'add')"
          echo "directories=$directories" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: collect-images
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.collect-images.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Read metadata
        id: metadata
        working-directory: "${{ matrix.image }}"
        # language=Bash
        run: |
          echo "version=$(jq -cerM '.version' .metadata.json)" >> $GITHUB_OUTPUT
          echo "platforms=$(jq -cerM '.platforms | join(",")' .metadata.json)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Load buildkit state
        uses: isac322/buildkit-state@v1
        with:
          buildx-name: ${{ steps.buildx.outputs.name }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: '{{defaultContext}}:${{ matrix.image }}'
          platforms: ${{ steps.metadata.outputs.platforms }}
          build-args: |
            VERSION=${{ steps.metadata.outputs.version }}

  build-result:
    if: always()
    needs: build
    runs-on: ubuntu-latest
    steps:
      - if: needs.build.result != 'success' && needs.build.result != 'skipped'
        run: exit 1
